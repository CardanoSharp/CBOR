<Project Sdk='Microsoft.NET.Sdk'>

  <PropertyGroup>
    <TargetFrameworks>netstandard1.0</TargetFrameworks>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <Version>4.1.2</Version>
    <Owners>Peter Occil</Owners>
    <Description>A C# implementation of Concise Binary Object Representation (CBOR), a general-purpose binary data format defined in RFC 7049.</Description>
    <Summary>A C# implementation of Concise Binary Object Representation (CBOR), a general-purpose binary data format defined in RFC 7049. </Summary>
    <Copyright>Written by Peter O. in 2013-2019.  Any copyright is released to the Public Domain.</Copyright>
    <Authors>Peter Occil</Authors>
    <PackageId>PeterO.Cbor</PackageId>
    <PackageLicenseExpression>CC0-1.0</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/peteroupc/CBOR</PackageProjectUrl>
    <PackageReleaseNotes>
### Version 4.1.2

- Fix issue with Numbers library dependency; etc.

### Version 4.1.1

- Fix issue where some non-basic characters in JSON strings encoded in UTF-8 were read incorrectly by the CBORObject.FromJSONBytes method

### Version 4.1

- Added the following to the CBORObject class: Entries property; ToJSONBytes, CalcEncodedSize, WithTag, and FromJSONBytes methods.
- Added overload to From JSONString, allowing only a portion of a string to be used
- Added support for reading JSON text sequences (FromJSONSequenceBytes, ReadJSONSequence).
- F# types are supported better by CBORObject.FromObject
- JSON writer now checks circular references.
- Improved performance when reading JSON numbers, thanks in part to an upgrade of the Numbers library used by the CBOR library.
- Added number conversion options and PreserveNegativeZero property to JSONOptions.
- Added ParseJSONDouble method, other methods, and additional ParseJSONNumber overloads to CBORDataUtilities
- Deprecated some existing overloads of ParseJSONNumber
- Deprecated many CBORObject properties and methods, including the following: CanFitInInt32, CanFitInInt64, IsInfinity, IsNaN, AsDecimal, AsEInteger, AsEFloat, AsERational, AsUInt16, AsUInt32, AsUInt64, AsSByte, AsByte, Abs, Negate, Sign, IsPositiveInfinity, IsNegativeInfinity, FromJSONString(string, CBOREncodeOptions)
- Added several methods and properties to CBORNumber (including certain methods deprecated in CBORObject), and exposed the kind of number stored in the class.
- JSONOptions string constructor now sets ReplaceSurrogates to false by default (previously, it was inadvertently true).
- Bug fixes

</PackageReleaseNotes>
    <PackageTags>cbor data serialization binary json</PackageTags>
    <SignAssembly>True</SignAssembly>
    <AssemblyOriginatorKeyFile>PeterO.snk</AssemblyOriginatorKeyFile>
    <Title>CBOR (Concise Binary Object Representation)</Title>
    <PackOnBuild>true</PackOnBuild>
  <CodeAnalysisRuleSet>rules.ruleset</CodeAnalysisRuleSet><PackageLicenseExpression>CC0-1.0</PackageLicenseExpression></PropertyGroup>

  <PropertyGroup Condition=' &apos;$(Configuration)|$(Platform)&apos; == &apos;Debug|AnyCPU&apos; '>
    <DocumentationFile>bin\Debug\netstandard1.0\CBOR.xml</DocumentationFile>

  <CodeAnalysisRuleSet>rules.ruleset</CodeAnalysisRuleSet></PropertyGroup>
  <PropertyGroup Condition=' &apos;$(Configuration)|$(Platform)&apos; == &apos;Release|AnyCPU&apos; '>
    <DebugType/>
    <DocumentationFile>bin\Release\netstandard1.0\CBOR.xml</DocumentationFile>

  <CodeAnalysisRuleSet>rules.ruleset</CodeAnalysisRuleSet></PropertyGroup>
  <ItemGroup>

  <PackageReference Include='StyleCop.Analyzers' PrivateAssets='All' Version='1.2.0-beta.164'/>
 <AdditionalFiles Include='stylecop.json'/>
<AdditionalFiles Include='rules.ruleset'/><PackageReference Include='PeterO.URIUtility' Version='1.0.0'/>
<PackageReference Include='Microsoft.CodeAnalysis.FxCopAnalyzers' PrivateAssets='All' Version='3.0.0-beta3.final'/>
<PackageReference Include='PeterO.Numbers' Version='1.6.0'/>
</ItemGroup>
      </Project>
